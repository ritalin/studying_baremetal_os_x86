;********************************************************************************
; void enable_rtc_int()
;********************************************************************************
enable_rtc_int:
;**** スタックフレームの構築 **** 
                            ;     +8| RTCを有効にするビットマスク
                            ;     +4| EIP (caller)
        push ebp            ; EBP  0| EBP (old)
        mov ebp, esp

;**** レジスタの保存 **** 
        push eax

;**** 処理の開始 ****
        ; ** 割り込み許可を設定する
        outp 0x70, 0x0B             ; RTCのレジスタBの使用を指示

        in al, 0x71
        or al, [ebp + 8]

        out 0x71, al

;**** レジスタの復帰 **** 
        pop eax

;**** スタックフレームの破棄 ****
        mov esp, ebp
        pop ebp
        ret

;********************************************************************************
; void int_rtc()
;********************************************************************************
int_rtc:
;**** スタックフレームの構築 **** 
                            ;      0| EIP (caller)
;**** レジスタの保存 **** 
        pusha 
        push ds
        push es

;**** 処理の開始 ****
        ; ** データ用セグメントセレクタ
        mov ax, 0x0010
        mov ds, ax
        mov es, ax

        cdecl get_rtc_time, RTC_TIME

        ; ** RTCのレジスタBの使用を指示割り込み要因を取得する
        outp 0x70, 0x0C
        in al, 0x71

        ; ** EOI(割り込みフラグ)をクリアする
        mov al, 0x20
        out 0xA0, al                    ; スレーブPIC 
        out 0x20, al                    ; マスタPIC

;**** レジスタの復帰 **** 
        pop es
        pop ds
        popa

;**** スタックフレームの破棄 ****
        iret